[{"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\index.js":"1","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\App.js":"2","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\authcontext.js":"4","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\404Page\\404.js":"5","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Footer\\Footer.js":"6","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Header\\Header.js":"7","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\UserProfile\\UserProfile.js":"8","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Stories\\Stories.js":"9","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Can\\Can.js":"10","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Auth\\Auth.js":"11","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SignUp\\SignUp.js":"12","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SignIn\\SignIn.js":"13","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Editor\\Editor.js":"14","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Authentication\\Authenticate.js":"15","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\rbac-rules.js":"16","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\UserCard\\UserCard.js":"17","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\StoryCard\\StoryCard.js":"18","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SearchStoryCard\\SearchStoryCard.js":"19","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Input\\Input.js":"20"},{"size":565,"mtime":1615672036112,"results":"21","hashOfConfig":"22"},{"size":3074,"mtime":1615672036076,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1615672036115,"results":"24","hashOfConfig":"22"},{"size":536,"mtime":1615672036109,"results":"25","hashOfConfig":"22"},{"size":517,"mtime":1615672036079,"results":"26","hashOfConfig":"22"},{"size":1141,"mtime":1615707939273,"results":"27","hashOfConfig":"22"},{"size":9220,"mtime":1615696227289,"results":"28","hashOfConfig":"22"},{"size":4604,"mtime":1615672036107,"results":"29","hashOfConfig":"22"},{"size":5896,"mtime":1615672036100,"results":"30","hashOfConfig":"22"},{"size":2353,"mtime":1615672036083,"results":"31","hashOfConfig":"22"},{"size":2521,"mtime":1615672036080,"results":"32","hashOfConfig":"22"},{"size":6035,"mtime":1615672036098,"results":"33","hashOfConfig":"22"},{"size":5834,"mtime":1615672036095,"results":"34","hashOfConfig":"22"},{"size":16698,"mtime":1615709215229,"results":"35","hashOfConfig":"22"},{"size":2113,"mtime":1615672036081,"results":"36","hashOfConfig":"22"},{"size":689,"mtime":1615672036114,"results":"37","hashOfConfig":"22"},{"size":1744,"mtime":1615672036105,"results":"38","hashOfConfig":"22"},{"size":3977,"mtime":1615672036102,"results":"39","hashOfConfig":"22"},{"size":1170,"mtime":1615672036093,"results":"40","hashOfConfig":"22"},{"size":1225,"mtime":1615672036091,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2n7o6v",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\index.js",[],["100","101"],"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\App.js",["102","103","104","105"],"// standard imports;\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n// import { Switch } from 'react-router';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\n\r\n// component imports;\r\nimport Page404 from './Components/404Page/404';\r\nimport Header from './Components/Header/Header';\r\nimport Footer from './Components/Footer/Footer';\r\nimport SignIn from './Components/SignIn/SignIn';\r\nimport SignUp from './Components/SignUp/SignUp';\r\nimport Stories from './Components/Stories/Stories';\r\nimport UserProfile from './Components/UserProfile/UserProfile';\r\nimport Editor from './Components/Editor/Editor';\r\nimport { AuthProvider, AuthContextType } from './authcontext';\r\nimport Auth from './Components/Auth/Auth';\r\nimport Authenticate from './Components/Authentication/Authenticate';\r\nimport Can from './Components/Can/Can';\r\nimport './App.css';\r\n\r\n/*\r\n\tTODO:\r\n\tChange all this.context.--- checks to use the <Can {...}>\r\n\tcomponent, to make code more readable;\r\n*/\r\n\r\nclass App extends Component {\r\n\tstatic contextType = AuthContextType;\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender(props) {\r\n\t\tconsole.log(\"App render called\");\r\n\t\t// let ctxt = this.context;\r\n\t\treturn (\r\n\t\t\t<Auth>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Container fluid>\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route path=\"/404\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\t<Page404 {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/signin\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\tthis.context.authenticated\r\n\t\t\t\t\t\t\t\t\t\t? <Redirect to='/' />\r\n\t\t\t\t\t\t\t\t\t\t: <SignIn {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/signup\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\tthis.context.authenticated\r\n\t\t\t\t\t\t\t\t\t\t? <Redirect to='/' />\r\n\t\t\t\t\t\t\t\t\t\t: <SignUp {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/authenticate/:randomString\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\t<Authenticate {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/story/edit/:storyId\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\t<Editor {...props} mode=\"edit\" />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/story/new\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\tthis.context.authenticated\r\n\t\t\t\t\t\t\t\t\t\t? <Editor {...props} mode=\"new\" {...props} />\r\n\t\t\t\t\t\t\t\t\t\t: <SignIn {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/story/:storyId\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\t<Editor {...props} mode=\"view\" />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/:username\" render={(props) => (\r\n\t\t\t\t\t\t\t\t\t<UserProfile me={false} {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact render={(props) => (\r\n\t\t\t\t\t\t\t\t\tthis.context.authenticated\r\n\t\t\t\t\t\t\t\t\t\t? <UserProfile me={true} {...props} />\r\n\t\t\t\t\t\t\t\t\t\t: <SignIn {...props} />\r\n\t\t\t\t\t\t\t\t)}>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</Router>\r\n\t\t\t\t\t\t<Footer />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</Auth>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\authcontext.js",["106"],"import { Component } from 'react';\r\nimport { createContext} from 'react';\r\n\r\nconst authContext = createContext({\r\n    authenticated: localStorage.getItem('authenticated') ? Boolean(localStorage.getItem('authenticated')) : false,\r\n    user: localStorage.getItem('user') || null,\r\n    role: localStorage.getItem('role') || \"visitor\",\r\n    token: localStorage.getItem('token') || null,\r\n});\r\n\r\nexport const AuthContextType = authContext;\r\nexport const AuthProvider = authContext.Provider;\r\nexport const AuthConsumer = authContext.Consumer;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\404Page\\404.js",["107"],"import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './404.css';\r\n\r\nconst page404 = () => {\r\n    return(\r\n        <Row className=\"Container404\">\r\n            <Col className=\"text-center\" id=\"text404\">\r\n                <h1>Sorry, we couldn't find what you're looking 4-04.</h1>\r\n            </Col>\r\n            <Col className=\"text-center\">\r\n                <img src=\"images/Illustration404.svg\" id=\"image404\"></img>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default page404;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Footer\\Footer.js",["108"],"import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './footer.css';\r\n\r\nconst footer = () => {\r\n    return (\r\n        <Row className=\"Footer\">\r\n            <Col md={4} sm={12} className=\"text-lg-center text-md-left\" id=\"footerWordmark\">\r\n                <span><a href=\"/\"><img src=\"/images/WordmarkWhite.svg\"></img></a></span>\r\n            </Col>\r\n            <Col md={4} sm={12} className=\"text-lg-center text-md-left text-sm-left FooterText\">\r\n                    <span>Made by Utkarsh Pant.</span>\r\n                    <a href=\"https://github.com/utkarshpant\" className=\"FooterLink\"><i class=\"fab fa-github\"></i></a>\r\n                    <a href=\"https://twitter.com/utkarshpant15\" className=\"FooterLink\"><i class=\"fab fa-twitter\"></i></a>\r\n                    <a href=\"https://linkedin.com/in/utkarshpant\" className=\"FooterLink\"><i class=\"fab fa-linkedin\"></i></a>\r\n            </Col>\r\n            <Col md={4} sm={12} className=\"text-lg-center text-md-left\">\r\n                <span>Like all stories, this story is always evolving.</span>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default footer;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Header\\Header.js",["109","110","111","112","113","114","115","116","117"],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, Component } from 'react';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport './header.css';\r\nimport Axios from 'axios';\r\nimport { AuthConsumer, AuthContextType, AuthProvider } from '../../authcontext';\r\nimport IdleTimer from 'react-idle-timer';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport UserCard from '../../Components/UserCard/UserCard';\r\nimport StoryCard from './../StoryCard/StoryCard';\r\nimport SearchStoryCard from './../SearchStoryCard/SearchStoryCard';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nclass Header extends Component {\r\n    static contextType = AuthContextType;\r\n    constructor(props) {\r\n        super(props);\r\n        const currentDate = new Date();\r\n        const hourOfDay = currentDate.getHours();\r\n        const timeOfDay = \"\";\r\n        if (hourOfDay >= 0 && hourOfDay < 12) {\r\n            this.timeOfDay = \"morning\";\r\n        } else if (hourOfDay >= 12 && hourOfDay <= 16) {\r\n            this.timeOfDay = \"afternoon\";\r\n        } else if (hourOfDay > 16 && hourOfDay <= 23) {\r\n            this.timeOfDay = \"evening\";\r\n        }\r\n    };\r\n\r\n    state = {\r\n        user: null,\r\n        searchOpen: false,\r\n        query: \"\",\r\n        results: null,\r\n        loadingResults: false\r\n    }\r\n\r\n    fireSearch = () => {\r\n        this.setState({ loadingResults: true });\r\n        axios.get(`https://telemetry-blog.herokuapp.com/api/search?querystring=${this.state.query}`)\r\n            .then(response => {\r\n                this.setState({ results: response.data.data, loadingResults: false });\r\n                // alert(JSON.stringify(response.data.data));\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n                // alert(JSON.stringify(err.response));\r\n            })\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n            <AuthConsumer>\r\n                {\r\n                    (value) => (\r\n                        <React.Fragment>\r\n                            <Row className=\"Header\">\r\n                                <Col lg={2} md={12} id=\"headerWordmark\" className=\"text-left text-lg-left text-md-left text-sm-left text-xs-center\">\r\n                                    <span><a href=\"/\"><img src=\"/images/Wordmark.svg\"></img></a></span>\r\n                                </Col>\r\n                                <Col lg={6} md={12} id=\"headerSearch\" className=\"text-center text-lg-center d-inline d-lg-inline d-md-inline d-sm-inline\">\r\n                                    <IdleTimer\r\n                                        timeout={3000}\r\n                                        ref={ref => { this.idleTimer = ref }}\r\n                                        startOnMount={false}\r\n                                        onIdle={this.fireSearch}\r\n                                        events={['keydown']}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"SearchBar\"\r\n                                            placeholder=\"Search by authors or story titles/subtitles.\"\r\n                                            value={this.state.query}\r\n                                            onClick={(event) => {\r\n                                                this.setState({ searchOpen: true });\r\n                                            }}\r\n                                            onChange={(event) => {\r\n                                                event.preventDefault();\r\n                                                if (event.target.value == \"\") {\r\n                                                    this.setState({ results: null });\r\n                                                }\r\n                                                this.setState({ query: event.target.value });\r\n                                            }}\r\n                                        />\r\n                                    </IdleTimer>\r\n                                </Col>\r\n                                <Col lg={2} md={12} id=\"headerGreeting\" className=\"text-right text-md-right text-sm-left d-inline d-lg-inline d-md-inline d-sm-inline\">\r\n                                    {`Good ${this.timeOfDay}${value.authenticated ? ', ' + value.user.firstName : \"\"}!`}\r\n                                </Col>\r\n                                <Col lg={2} sm={12} className=\"text-right text-md-right text-sm-right\">\r\n                                    {\r\n                                        this.context.authenticated\r\n                                            ? <button className=\"Logout\" onClick={() => {\r\n                                                this.context.logout();\r\n                                            }}>\r\n                                                Log me out.\r\n                                            </button>\r\n                                            : <a href=\"/signin\">Sign me in.</a>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                            <Collapse in={this.state.searchOpen}>\r\n                                <div>\r\n                                    <Row className={`SearchResultsContainer`} >\r\n                                        <Container fluid>\r\n                                            <Row className=\"SearchResultsHeader\">\r\n                                                <Col lg={6} md={6} sm={10} xs={10} className=\"SearchHeaderText\">\r\n                                                    <span>Search</span>\r\n                                                </Col>\r\n                                                <Col lg={6} md={6} sm={2} xs={2} className=\"SearchHeaderClose text-right text-md-right\" onClick={() => {\r\n                                                    this.setState({\r\n                                                        searchOpen: false\r\n                                                    });\r\n                                                }}>\r\n                                                    <span>&times;</span>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row className=\"SearchResults\">\r\n                                                <span className=\"AuthorColumnHeader\">Authors</span>\r\n                                                <Col md={12} className=\"AuthorResults\">\r\n                                                    <SkeletonTheme color=\"#6a6a6a20\" highlightColor=\"##7a7a7a80\">\r\n                                                        {\r\n                                                            this.state.results\r\n                                                                ? this.state.results[0].map((author) => (\r\n                                                                    <a href={`/${author.username}`}>\r\n                                                                        <UserCard user={author} size=\"small\" />\r\n                                                                    </a>\r\n                                                                ))\r\n                                                                : <Skeleton count={1} height={125} width={200} />\r\n                                                        }\r\n                                                    </SkeletonTheme>\r\n                                                </Col>\r\n                                                <span className=\"StoryColumnHeader\">Stories</span>\r\n                                                <Col md={12} className=\"StoryResults\">\r\n                                                    <SkeletonTheme color=\"#6a6a6a20\" highlightColor=\"##7a7a7a80\">\r\n                                                        {\r\n                                                            this.state.results\r\n                                                                ? this.state.results[1].map((story) => (\r\n                                                                    <a href={`/story/${story._id}`}>\r\n                                                                        <SearchStoryCard story={story} key={story._id} />\r\n                                                                    </a>\r\n                                                                ))\r\n                                                                : <Skeleton count={1} height={200} width={250} />\r\n                                                        }\r\n                                                    </SkeletonTheme>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Container>\r\n                                    </Row>\r\n                                </div>\r\n                            </Collapse>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </AuthConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\UserProfile\\UserProfile.js",["118","119","120"],"import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport axios from 'axios';\r\nimport \"./userProfile.css\";\r\nimport Stories from '../Stories/Stories';\r\nimport { AuthContextType } from '../../authcontext';\r\n\r\nclass UserProfile extends Component {\r\n    static contextType = AuthContextType;\r\n    constructor(props) {\r\n        super(props);\r\n        this.me = (this.props.me || false);\r\n    }\r\n\r\n    state = {\r\n        user: null\r\n    }\r\n\r\n\r\n    componentDidMount(props) {\r\n        console.log(\"this.context in UserProfile:\\t\", this.context);\r\n        this.props.me ?\r\n            axios.get(`https://telemetry-blog.herokuapp.com/api/user/me`,\r\n                {\r\n                    headers: {\r\n                        'x-auth-token': this.context.token\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    const user = response.data.data;\r\n                    this.setState({\r\n                        user: user\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    // check if the error is 404. Then redirect to 404!\r\n                    // console.log(err.data);\r\n                    this.props.history.push('/404');\r\n                })\r\n            :\r\n            axios.get(`https://telemetry-blog.herokuapp.com/api/user/get/${this.props.match.params.username}`)\r\n                .then(response => {\r\n                    const user = response.data.data;\r\n                    this.setState({\r\n                        user: user\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    // check if the error is 404. Then redirect to 404!\r\n                    // console.log(err.data);\r\n                    this.props.history.push('/404');\r\n                })\r\n\r\n    };\r\n\r\n    render(props) {\r\n        return (\r\n            <Row className=\"UserProfile\">\r\n                <Col>\r\n                    <Row className=\"UserProfileHeader\">\r\n                        <Container fluid>\r\n                            <Row className=\"UserProfileNameRow\">\r\n                                <Col>\r\n                                    <SkeletonTheme color=\"#ffffff80\" highlight=\"#ffffff\">\r\n                                        <span className=\"UserProfileFullName\">{this.state.user ? this.state.user.firstName + \" \" + this.state.user.lastName : <Skeleton count={1} width={300} />}</span>\r\n                                    </SkeletonTheme>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"UserProfileUsernameRow\">\r\n                                <Col>\r\n                                    <span className=\"UserProfileUsername\">{this.state.user ? this.state.user.username : <Skeleton height={25} />}</span>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"UserProfileBioRow\">\r\n                                <Col>\r\n                                    <span className=\"UserProfileBio\">{this.state.user ? this.state.user.bio : <Skeleton height={25} width={200} count={2} />}</span>\r\n                                </Col>\r\n                            </Row>\r\n                            {\r\n                                (this.state.user && (this.state.user.socialMediaHandles.twitter != \"\"))\r\n                                    ? <Row className=\"UserProfileSocialRow\">\r\n                                        <Col>\r\n                                            <p className=\"UserProfileTwitter\"><a href={`https://www.twitter.com/${this.state.user.socialMediaHandles.twitter}`}><i class=\"fab fa-twitter\"></i></a></p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : null\r\n                            }\r\n                        </Container>\r\n                    </Row>\r\n                    <Row className=\"BodyRow\">\r\n                        {\r\n                            this.state.user\r\n                                // ? `stories for ${this.state.user.username} should appear here` : <Skeleton count={1} width={300} />\r\n                                ? <Stories user={this.state.user.username} /> : <Skeleton count={1} width={300} />\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default UserProfile;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Stories\\Stories.js",["121","122","123","124"],"import React, { Component } from \"react\";\r\nimport './stories.css';\r\nimport StoryCard from '../StoryCard/StoryCard';\r\nimport axios from 'axios';\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { AuthConsumer, AuthContextType } from '../../authcontext';\r\nimport Can from \"../Can/Can\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Stories extends Component {\r\n    static contextType = AuthContextType;\r\n    constructor(props) {\r\n        super(props);\r\n        this.user = this.props.user;\r\n        this.handleDeletion.bind(this);\r\n        this.handleUpdation.bind(this);\r\n        this.newStoryButtonHandler.bind(this);\r\n    }\r\n\r\n    state = {\r\n        stories: []\r\n    }\r\n\r\n    handleDeletion = (deletedStoryId) => {\r\n        const newStoryList = this.state.stories.filter((story) => {\r\n            return story._id != deletedStoryId\r\n        });\r\n        this.setState({ stories: newStoryList });\r\n    }\r\n\r\n    handleUpdation = (deletedStoryId) => {\r\n        this.setState(prevState => ({...prevState}));\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get(`https://telemetry-blog.herokuapp.com/api/user/get/${this.user}/stories`)\r\n            .then(storiesRes => {\r\n                this.setState({ stories: storiesRes.data.data });\r\n                console.log(\"Stories\", storiesRes.data.data);\r\n                // alert(JSON.stringify(this.state.stories));\r\n            })\r\n            .catch(err => {\r\n                // alert(JSON.stringify(err));\r\n            })\r\n    };\r\n\r\n    newStoryButtonHandler = () => {\r\n        if (this.context.authenticated) {\r\n            this.props.history.push('/story/new');\r\n        } else {\r\n            this.props.history.push('/signin');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Rendering stories for user\", this.user);\r\n        return (\r\n            <AuthConsumer>\r\n                {(value) => (\r\n                    <Container fluid className=\"StoriesContainer\">\r\n                        <Row className=\"StoriesContainerHeader\">\r\n                            <Col className=\" text-left text-lg-left text-md-left text-sm-left\">\r\n                                <span id=\"ContainerHeaderText\">Stories</span>\r\n                            </Col>\r\n                            <Col className=\"text-left text-lg-right text-md-right text-sm-left\">\r\n                                <input type=\"submit\" value=\"Inspired? Start a new story.\" id=\"newStoryBtn\" onClick={() => {\r\n                                    this.newStoryButtonHandler();\r\n                                }}></input>\r\n                            </Col>\r\n                            <hr></hr>\r\n                        </Row>\r\n                        <Row className=\"StoriesContainerBody\">\r\n                            {\r\n                                this.state.stories\r\n                                    ? <Can\r\n                                        role={value.role}\r\n                                        perform=\"posts:edit\"\r\n                                        data={{\r\n                                            username: value.authenticated ? value.user.username : null,\r\n                                            postOwner: this.user\r\n                                        }}\r\n                                        yes={() => (\r\n                                            <React.Fragment>\r\n                                                {   \r\n                                                    this.state.stories.length != 0\r\n                                                    ? this.state.stories.map((story) => {\r\n                                                        return (\r\n                                                            <StoryCard story={story} key={story._id} handleDeletion={this.handleDeletion} handleUpdation={this.handleUpdation}/>\r\n                                                        )\r\n                                                    })\r\n                                                    : <p>\r\n                                                        Looks like you haven't published anything yet. Go on, tell the world your story.\r\n                                                    </p>\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        no={() => (\r\n                                            <React.Fragment>\r\n                                                {\r\n                                                    this.state.stories.filter((story) => {\r\n                                                        return story.isPublished;\r\n                                                    }).length != 0\r\n                                                        ? this.state.stories.filter((story) => {\r\n                                                            return story.isPublished;\r\n                                                        }).map((story) => {\r\n                                                            return <StoryCard story={story} key={story._id} />\r\n                                                        })\r\n                                                        : <p>Looks like this user hasnt published anything yet. Come back later!</p>\r\n                                                }\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                    />\r\n                                    : <Skeleton count={1} height={100} />\r\n                            }\r\n\r\n                        </Row>\r\n                    </Container>\r\n                )}\r\n            </AuthConsumer>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(Stories);","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Can\\Can.js",["125","126"],"import React, { Component } from 'react';\r\nimport rules from '../../rbac-rules';\r\n\r\nclass Can extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    check = (rules, role, action, data) => {\r\n        const permissions = rules[role];\r\n        if (!permissions) {\r\n            console.log(\"The permission\", action, \"is not defined for\", role);\r\n            return false;\r\n        }\r\n\r\n        const staticPermissions = permissions.static;\r\n        if (staticPermissions && staticPermissions.includes(action)) {\r\n            console.log(\"The static permission\", action, \"is defined for\", role);\r\n            return true;\r\n        }\r\n\r\n        const dynamicPermissions = permissions.dynamic;\r\n        if (dynamicPermissions) {\r\n            console.log(\"The dynamic permission\", action, \"is defined for\", role);\r\n            const permissionCondition = dynamicPermissions[action];\r\n            if (!permissionCondition) {\r\n                console.log(\"The dynamic permission\", action, \"is DENIED for\", role);\r\n                return false;\r\n            }\r\n            return permissionCondition(data);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        console.log(\"permission:\", this.check(rules, this.props.role, this.props.perform, this.props.data))\r\n        return this.check(rules, this.props.role, this.props.perform, this.props.data)\r\n            ? this.props.yes()\r\n            : this.props.no();\r\n    }\r\n}\r\n\r\n// const check = (rules, role, action, data) => {\r\n//     const permissions = rules[role];\r\n\r\n//     if (!permissions) {\r\n//         return false;\r\n//     }\r\n\r\n//     const staticPermissions = permissions.static;\r\n//     if (staticPermissions && staticPermissions.includes(action)) {\r\n//         return true;\r\n//     }\r\n\r\n//     const dynamicPermissions = permissions.dynamic;\r\n//     if (dynamicPermissions) {\r\n//         const permissionCondition = dynamicPermissions[action];\r\n//         if (!permissionCondition) {\r\n//             return false;\r\n//         }\r\n\r\n//         return permissionCondition(data);\r\n//     }\r\n\r\n//     return false;\r\n// };\r\n\r\n// const Can = props => {\r\n//     check(rules, props.role, props.action, props.data)\r\n//         ? props.yes()\r\n//         : props.no();\r\n// };\r\n\r\nCan.defaultProps = {\r\n    yes: () => null,\r\n    no: () => null\r\n};\r\n\r\nexport default Can;\r\n","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Auth\\Auth.js",["127"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthProvider } from '../../authcontext';\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n    };\r\n\r\n    /*\r\n        This component is meant to hold information regarding\r\n        any currently logged-in users and to provide methods \r\n        to children consuming this information, to update it.\r\n\r\n        initiateLogin: redirects to the log-in page.\r\n\r\n        logout: clears localstorage and resets the state.\r\n\r\n        setUserData: method to set the state and save this data to localStorage.\r\n\r\n        Since this component's state is passed down as context data,\r\n        this is the place to check existing values in localStorage\r\n        and pass them down via context data.\r\n    */\r\n\r\n    state = {\r\n        authenticated: Boolean(localStorage.getItem('authenticated')) || false,\r\n        user: JSON.parse(localStorage.getItem('user')) || null,\r\n        role: localStorage.getItem('role') || 'visitor',\r\n        token: localStorage.getItem('token') || '',\r\n    };\r\n\r\n    initiateLogin = () => {\r\n        return (\r\n            this.props.history.push('/signin')\r\n        )\r\n    };\r\n\r\n    logout = () => {\r\n        localStorage.clear();\r\n        this.setState({\r\n            authenticated: false,\r\n            user: \"\",\r\n            role: \"visitor\",\r\n            token: null\r\n        });\r\n        window.location.reload();\r\n    };\r\n\r\n    setUserData = (authResult) => {\r\n        console.log(\"Auth provider setUserData called\");\r\n        this.setState({\r\n            authenticated: true,\r\n            user: authResult.user,\r\n            role: authResult.role,\r\n            token: authResult.token,\r\n        });\r\n        localStorage.setItem('user', JSON.stringify(authResult.user));\r\n        localStorage.setItem('authenticated', true);\r\n        localStorage.setItem('role', authResult.role);\r\n        localStorage.setItem('token', authResult.token);\r\n    };\r\n\r\n    render() {\r\n        console.log(\"Auth provider render called\");\r\n        const authProviderValue = {\r\n            ...this.state,\r\n            initiateLogin: this.initiateLogin,\r\n            logout: this.logout,\r\n            setUserData: this.setUserData\r\n        };\r\n        return (\r\n            <AuthProvider value={authProviderValue}>\r\n                {this.props.children}\r\n            </AuthProvider>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Auth;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SignUp\\SignUp.js",["128","129","130","131","132","133","134","135","136","137"],"import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './signup.css';\r\nimport axios from 'axios';\r\nimport Input from './../Input/Input';\r\n\r\nclass SignUpForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t};\r\n\r\n\tstate = {\r\n\t\tsignUpForm: {\r\n\t\t\temail: {\r\n\t\t\t\ttype: \"email\",\r\n\t\t\t\tplaceholder: \"support@telemetryblog.in\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmin: 5,\r\n\t\t\t\t\tmax: 30\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tname: {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tplaceholder: \"Your full name\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmin: 5,\r\n\t\t\t\t\tmax: 35\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tusername: {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tplaceholder: \"Pick a username\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmin: 5,\r\n\t\t\t\t\tmax: 35\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tbio: {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tplaceholder: \"Tell us about yourself...\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmin: 1,\r\n\t\t\t\t\tmax: 200\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttwitter: {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tplaceholder: \"Your twitter username minus the @\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\tmax: 20\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tloading: false,\r\n\t\terrors: {},\r\n\t\tsuccess: false\r\n\t}\r\n\r\n\t// run this everytime a keystroke is recorded, \r\n\t// for that particular element;\r\n\tinputChangeHandler = (event) => {\r\n\t\tconst inputIdentifier = event.target.id;\r\n\t\tconst updatedSignUpForm = {\r\n\t\t\t...this.state.signUpForm,\r\n\t\t}\r\n\t\tconst updatedElement = {\r\n\t\t\t...updatedSignUpForm[inputIdentifier]\r\n\t\t}\r\n\t\tupdatedElement.value = event.target.value;\r\n\t\tupdatedSignUpForm[inputIdentifier] = updatedElement;\r\n\r\n\t\tthis.setState({\r\n\t\t\tsignUpForm: updatedSignUpForm,\r\n\t\t\terrors: {},\r\n\t\t\tstatusText: null\r\n\t\t});\r\n\t}\r\n\r\n\t// handling form submission and validations;\r\n\tonSubmitHandler = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\r\n\t\tconst formData = {};\r\n\t\tfor (let element in this.state.signUpForm) {\r\n\t\t\tformData[element] = this.state.signUpForm[element].value;\r\n\t\t}\r\n\r\n\t\tconst validationErrors = this.checkValidations(formData);\r\n\t\tif (validationErrors) {\r\n\t\t\tconsole.log(\"Validation errors:\", validationErrors);\r\n\t\t\tthis.setState({ errors: validationErrors });\r\n\t\t} else {\r\n\t\t\tthis.triggerSignUp(formData);\r\n\t\t\t// console.log(\"Sign up triggered\");\r\n\t\t}\r\n\t}\r\n\r\n\tcheckValidations(formData) {\r\n\t\tlet errors = this.state.errors;\r\n\t\tfor (let element in formData) {\r\n\r\n\t\t\tconst rules = this.state.signUpForm[element].validations;\r\n\t\t\tfor (let rule in rules) {\r\n\t\t\t\tif (rule == \"required\" && this.state.signUpForm[element].value.length == 0) {\r\n\t\t\t\t\terrors[element] = `This is required`;\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif (rule == \"min\" && this.state.signUpForm[element].value.length < parseInt(rules[rule])) {\r\n\t\t\t\t\terrors[element] = `This must be at least ${rules[rule]} character${rules[rule] == 1 ? '' : 's'} long.`;\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif (rule == \"max\" && this.state.signUpForm[element].value.length > parseInt(rules[rule])) {\r\n\t\t\t\t\terrors[element] = `This must be lesser than ${rules[rule]} characters long.`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.signUpForm[element].type == \"email\") {\r\n\t\t\t\tlet re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{1,}))$/;\r\n\t\t\t\tif (re.test(formData[element])) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrors[element] = \"This email is invalid. Try another!\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Final errors\", errors);\r\n\r\n\t\tif (JSON.stringify(errors) != '{}') {\r\n\t\t\tconsole.log(\"The following errors were detected\", errors);\r\n\t\t\treturn errors;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender = (props) => {\r\n\t\tconst formElements = [];\r\n\t\tfor (let element in this.state.signUpForm) {\r\n\t\t\tformElements.push({\r\n\t\t\t\tid: element,\r\n\t\t\t\tconfig: this.state.signUpForm[element]\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Row className=\"SignUp\" >\r\n\t\t\t\t<Col lg={6} md={6} sm={12} className=\"IllustrationPanel text-center\">\r\n\t\t\t\t\t<span><img className=\"Illustration\" src=\"/images/PeopleIllustration2.svg\"></img></span>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={6} md={6} sm={12} className=\"ContentPanel text-center\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t{formElements.map((formElement) => (\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\terror={this.state.errors[formElement.id] == null ? \"none\" : this.state.errors[formElement.id]}\r\n\t\t\t\t\t\t\t\t\ttype={formElement.config.type}\r\n\t\t\t\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\t\t\t\tplaceholder={formElement.config.placeholder}\r\n\t\t\t\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\t\t\t\tname={formElement.id}\r\n\t\t\t\t\t\t\t\t\tid={formElement.id}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.inputChangeHandler(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Sign me up.\"\r\n\t\t\t\t\t\t\t\tclassName=\"FormBtn\"\r\n\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t\t\tthis.onSubmitHandler();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<span className={`StatusText text-left ${this.state.statusText ? \" Show\" : \" HideLabel\"}`}>\r\n\t\t\t\t\t\t\t{this.state.statusText}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\tAlready have an account? <a href='/signin'>Sign in.</a>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n\r\n\ttriggerSignUp = (formData) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\t// console.log(formData);\r\n\t\taxios.post(\"https://telemetry-blog.herokuapp.com/api/user/signup\", formData)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstatusText: \"Check your email for the sign-in link. Don't forget to check your spam!\",\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(JSON.stringify(err.response.data.error));\r\n\t\t\t\tif (err.response.data.error == \"USERNAME_TAKEN\")\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrors: {username: \"This username is taken. Try another one?\"},\r\n\t\t\t\t\tstatusText: \"An error occured. Try again.\",\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t\t// const errors = {};\r\n\t\t\t\t// for (let field in err.response.error) {\r\n\t\t\t\t// \terrors[field] = err.response.error[field];\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\tthis.setState({ loading: false });\r\n\r\n\t}\r\n};\r\n\r\nexport default SignUpForm;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SignIn\\SignIn.js",["138","139","140","141","142","143","144","145","146","147","148","149"],"import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Input from '../Input/Input';\r\nimport _ from 'lodash';\r\nimport './signin.css';\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport axios from 'axios';\r\n\r\n/*\r\n\tThe state in this component manages the form as a controlled component,\r\n\tand also other functions like form validation, etc.\r\n\r\n\tThe signInForm object contains all input fields and their validations,\r\n\tthe loading property is toggled on 'successful' form submits (when all validations pass),\r\n\tand the errors object is populated with the \r\n*/\r\n\r\nclass SignInForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\r\n\tstate = {\r\n\t\tsignInForm: {\r\n\t\t\tusername: {\r\n\t\t\t\ttype: \"text\",\r\n\t\t\t\tplaceholder: \"What's your username?\",\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidations: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tmin: 5,\r\n\t\t\t\t\tmax: 35\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tloading: false,\r\n\t\terrors: {},\r\n\t\tsuccess: false\r\n\t}\r\n\r\n\t// run this everytime a keystroke is recorded, \r\n\t// for that particular element;\r\n\tinputChangeHandler = (event) => {\r\n\t\tconst inputIdentifier = event.target.id;\r\n\t\tconst updatedSignInForm = {\r\n\t\t\t...this.state.signInForm,\r\n\t\t}\r\n\t\tconst updatedElement = {\r\n\t\t\t...updatedSignInForm[inputIdentifier]\r\n\t\t}\r\n\t\tupdatedElement.value = event.target.value;\r\n\t\tupdatedSignInForm[inputIdentifier] = updatedElement;\r\n\r\n\t\tthis.setState({\r\n\t\t\tsignInForm: updatedSignInForm,\r\n\t\t\terrors: {},\r\n\t\t\tstatusText: null\r\n\t\t});\r\n\t}\r\n\r\n\t// handling form submission and validations;\r\n\tonSubmitHandler = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\r\n\t\tconst formData = {};\r\n\t\tfor (let element in this.state.signInForm) {\r\n\t\t\tformData[element] = this.state.signInForm[element].value;\r\n\t\t}\r\n\r\n\t\tconst validationErrors = this.checkValidations(formData);\r\n\t\tif (validationErrors) {\r\n\t\t\tthis.setState({ errors: validationErrors });\r\n\t\t} else {\r\n\t\t\tthis.triggerSignIn(formData);\r\n\t\t}\r\n\t}\r\n\r\n\tcheckValidations(formData) {\r\n\t\tlet errors = this.state.errors;\r\n\t\tfor (let element in formData) {\r\n\r\n\t\t\tconst rules = this.state.signInForm[element].validations;\r\n\t\t\tfor (let rule in rules) {\r\n\t\t\t\tif (rule == \"required\" && this.state.signInForm[element].value.length == 0) {\r\n\t\t\t\t\terrors[element] = `This is required`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rule == \"min\" && this.state.signInForm[element].value.length < parseInt(rules[rule])) {\r\n\t\t\t\t\terrors[element] = `This must be at least ${rules[rule]} character${rules[rule] == 1 ? '' : 's'} long.`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (rule == \"max\" && this.state.signInForm[element].value.length > parseInt(rules[rule])) {\r\n\t\t\t\t\terrors[element] = `This must be lesser than ${rules[rule]} characters long.`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.signInForm[element].type == \"email\") {\r\n\t\t\t\tlet re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{1,}))$/;\r\n\t\t\t\tif (re.test(formData[element])) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrors[element] = \"This email is invalid. Try another!\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Final errors\", errors);\r\n\r\n\t\tif (JSON.stringify(errors) != '{}') {\r\n\t\t\tconsole.log(\"The following errors were detected\", errors);\r\n\t\t\treturn errors;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\trender = (props) => {\r\n\t\tconst formElements = [];\r\n\t\tfor (let element in this.state.signInForm) {\r\n\t\t\tformElements.push({\r\n\t\t\t\tid: element,\r\n\t\t\t\tconfig: this.state.signInForm[element]\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Row className=\"SignIn\" >\r\n\t\t\t\t<Col lg={6} md={6} sm={12} className=\"IllustrationPanel text-center\">\r\n\t\t\t\t\t<span><img className=\"Illustration\" src=\"/images/PeopleIllustration1.svg\"></img></span>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg={6} md={6} sm={12} className=\"ContentPanel text-center\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t{formElements.map((formElement) => (\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\terror={this.state.errors[formElement.id] == null ? \"none\" : this.state.errors[formElement.id]}\r\n\t\t\t\t\t\t\t\t\ttype={formElement.config.type}\r\n\t\t\t\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\t\t\t\tplaceholder={formElement.config.placeholder}\r\n\t\t\t\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\t\t\t\tname={formElement.id}\r\n\t\t\t\t\t\t\t\t\tid={formElement.id}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.inputChangeHandler(event)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Sign me in.\"\r\n\t\t\t\t\t\t\t\tclassName=\"FormBtn\"\r\n\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t\t\tthis.onSubmitHandler();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<span className={`StatusText text-left ${this.state.statusText ? \" Show\" : \" HideLabel\"}`}>\r\n\t\t\t\t\t\t\t{this.state.statusText}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\tDon't have an account? <a href='/signup'>Sign up</a> for one.\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t};\r\n\r\n\ttriggerSignIn = (formData) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\t// console.log(formData);\r\n\t\taxios.post(\"https://telemetry-blog.herokuapp.com/api/user/signin\", formData)\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstatusText: \"Check your email for the sign-in link. Don't forget to check your spam!\",\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(JSON.stringify(err.response.data.error));\r\n\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \tstatusText: \"An error occured. Try again.\",\r\n\t\t\t\t// \tloading: false\r\n\t\t\t\t// })\r\n\r\n\t\t\t\tif (err.response.data.error.username == \"NO_SUCH_USERNAME\") {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrors: { username: \"Sorry, this username doesn't seem right. If you don't have an account, sign up for one!\" },\r\n\t\t\t\t\t\tstatusText: \"An error occured. Try again.\",\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t// const errors = {};\r\n\t\t\t\t// for (let field in err.response.error) {\r\n\t\t\t\t// \terrors[field] = err.response.error[field];\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\tthis.setState({ loading: false });\r\n\r\n\t}\r\n}\r\n\r\nexport default SignInForm;\r\n","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Editor\\Editor.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Authentication\\Authenticate.js",["165","166","167","168"],"import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthConsumer, AuthContextType, AuthProvider } from '../../authcontext';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './authenticate.css';\r\n\r\n/*\r\n    This component is rendered when the user clicks\r\n    on the sign-in link in the email.\r\n\r\n    It receives the setter method 'setUserData' from the AuthContext Provider,\r\n    to set the state and thus the context that is passed down to all Consumers.\r\n\r\n    The data (username) to be set in the context is passed down as a prop.\r\n*/\r\nclass Authenticate extends Component {\r\n    static contextType = AuthContextType;\r\n    constructor(props) {\r\n        super(props);\r\n        this.randomString = this.props.match.params.randomString;\r\n        this.email = new URLSearchParams(this.props.location.search).get('email');\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        console.log(\"this.context in authenticate:\\t\", this.context);\r\n        axios.get(`https://telemetry-blog.herokuapp.com/api/user/authenticate/${this.randomString}?email=${this.email}`)\r\n            .then(response => {\r\n                console.log(\"User data:\\t\", response.data.data);\r\n                const user = response.data.data;\r\n                const role = response.data.role;\r\n                const token = response.data.token;\r\n                this.context.setUserData({\r\n                    // username: username,\r\n                    user: user,\r\n                    role: role,\r\n                    token: token\r\n                });\r\n                this.props.history.push(`/${user.username}`);\r\n            })\r\n            .catch(err => {\r\n                this.props.history.push('/signin');\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"AuthenticateContainer\">\r\n                <span className=\"AuthenticateMessage\">Trying to sign you in with email <strong>{this.email}</strong>. <br /><br />If that works, we'll take you home.</span>\r\n            </Row>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Authenticate;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\rbac-rules.js",[],"C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\UserCard\\UserCard.js",["169","170"],"import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport './usercard.css';\r\n\r\nclass UserCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`UserCard_${this.props.size}`}>\r\n                    <Row className={`UserCardNameRow_${this.props.size}`}>\r\n                        <Col>\r\n                            <span className={`UserCardFullName_${this.props.size}`}>{this.props.user.firstName + \" \" + this.props.user.lastName}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className={`UserCardUsernameRow_${this.props.size}`}>\r\n                        <Col>\r\n                            <span className={`UserCardUsername_${this.props.size}`}>{this.props.user.username}</span>\r\n                            {\r\n                                this.props.user.socialMediaHandles.twitter\r\n                                    ? <p className={`UserCardTwitter_${this.props.size}`}><a href={`https://www.twitter.com/${this.props.user.socialMediaHandles.twitter}`}><i class=\"fab fa-twitter\"></i></a></p>\r\n                                    : null\r\n                            }\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    {/* <Row className={`UserCardBioRow_${this.props.size}`}>\r\n                        <Col>\r\n                            <span className={`UserCardBio_${this.props.size}`}>{this.props.user.bio}</span>\r\n                        </Col>\r\n                    </Row> */}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default UserCard;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\StoryCard\\StoryCard.js",["171","172","173","174","175"],"import React, { useContext } from \"react\";\r\nimport Can from \"../Can/Can\";\r\nimport { AuthContextType } from './../../authcontext';\r\nimport './storycard.css';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col, } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst Storycard = (props) => {\r\n\r\n    const authContext = useContext(AuthContextType);\r\n\r\n    const onPublishUnpublishHandler = (storyToUpdate) => {\r\n        console.log(\"Publish unpublish handler called for\", storyToUpdate);\r\n        axios.get(`https://telemetry-blog.herokuapp.com/api/story/${storyToUpdate.isPublished ? \"unpublish\" : \"publish\"}/${storyToUpdate._id}`)\r\n            .then(response => {\r\n                window.location.reload();\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error in updation\", err.response);\r\n            })\r\n        // TODO: Set up the unpublish POST request here\r\n        // using axios;\r\n    }\r\n\r\n    const onDeleteHandler = (deletedStoryId) => {\r\n        console.log(\"Deletion handler called\");\r\n        axios.delete(`https://telemetry-blog.herokuapp.com/api/story/delete/${deletedStoryId}`)\r\n            .then(response => {\r\n                props.handleDeletion(deletedStoryId);\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error in deletion\", err);\r\n            })\r\n        // TODO: Set up the DELETE request here\r\n        // using axios;\r\n    }\r\n\r\n    return (\r\n        <div className=\"StoryCard\">\r\n            <div className=\"StoryDetails\">\r\n                <a href={`/story/${props.story._id}`} className=\"StoryCardLink\">\r\n\r\n                    <div className=\"StoryCardTitle\">\r\n                        <span>{props.story.content.title}</span>\r\n                    </div>\r\n                    <div className=\"StoryCardSubtitle\">\r\n                        <span >{props.story.content.subtitle.substring(0, 30) + '...'}</span>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <Can\r\n                role={authContext.role}\r\n                perform=\"posts:edit\"\r\n                data={{ username: authContext.user ? authContext.user.username : null, postOwner: props.story.owner }}\r\n                yes={() => (\r\n                    <div className=\"StoryEditControlsContainer\">\r\n                        <div className=\"text-left\">\r\n                            <a href={`story/edit/${props.story._id}`} id=\"editStoryLink\" className=\"StoryOptions\">Edit</a>\r\n                        </div>\r\n                        <div className=\"text-md-left text-sm-left\">\r\n                            <span\r\n                                id=\"unpublishStoryLink\"\r\n                                className=\"StoryOptions\"\r\n                                onClick={(event) => {\r\n                                    onPublishUnpublishHandler(props.story);\r\n                                }}\r\n                            >\r\n                                {props.story.isPublished ? \"Unpublish\" : \"Publish\"}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"text-md-left text-sm-left\">\r\n                            <span\r\n                                id=\"deleteStoryLink\"\r\n                                className=\"StoryOptions\"\r\n                                onClick={(event) => {\r\n                                    onDeleteHandler(props.story._id);\r\n                                }}>\r\n                                Delete\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            console.log(\"authcontext username:\", authContext.user.username, \"post owner:\", props.story.owner)\r\n                        }\r\n                    </div>\r\n                )}\r\n                no={() => {\r\n                    return null;\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Storycard;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\SearchStoryCard\\SearchStoryCard.js",["176","177","178","179","180","181","182","183"],"import React, { useContext } from \"react\";\r\nimport Can from \"../Can/Can\";\r\nimport { AuthContextType } from './../../authcontext';\r\nimport './searchstorycard.css';\r\nimport axios from 'axios';\r\nimport { Container, Row, Col, } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst SearchStoryCard = (props) => {\r\n    const authContext = useContext(AuthContextType);\r\n\r\n    return (\r\n        <div className=\"SearchStoryCard\">\r\n            <div className=\"StoryDetails\">\r\n                <a href={`/story/${props.story._id}`} className=\"SearchStoryCardLink\">\r\n                    <div className=\"SearchStoryTitle\">\r\n                        <span>{props.story.content.title}</span>\r\n                    </div>\r\n                    <div className=\"SearchStorySubtitle\">\r\n                        <span >{props.story.content.subtitle.substring(0, 30) + '...'}</span>\r\n                    </div>\r\n                </a>\r\n                <div className=\"OwnerDetails\">\r\n                    by <strong>{props.story.owner}</strong>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchStoryCard;","C:\\Users\\utkar\\Desktop\\GitHub\\telemetry-blog-frontend\\src\\Components\\Input\\Input.js",["184","185","186","187","188","189","190"],"import React from \"react\";\r\nimport { Row } from 'react-bootstrap';\r\nimport './input.css';\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    let label = <label\r\n        className={`text-left ErrorText ${(props.error == \"none\") ? ' HideLabel' : ' Show'}`}\r\n        id={props.id}\r\n    >\r\n        {props.error == \"none\" ? null : props.error}\r\n    </label>\r\n\r\n    switch (props.type) {\r\n        case ('email'):\r\n            inputElement = <input className={`Input ${(props.error == \"none\" ? null : \" Error\")}`} type=\"email\" {...props} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={`Input ${(props.error == \"none\" ? null : \" Error\")}`} {...props} />\r\n            break;\r\n        case ('text'):\r\n            inputElement = <input className={`Input ${(props.error == \"none\" ? null : \" Error\")}`} type=\"text\" {...props} />\r\n            break;\r\n        default:\r\n            inputElement = < input className={`Input ${(props.error == \"none\" ? null : \" Error\")}`} type=\"text\" {...props} />\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {label}\r\n            {inputElement}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Input;",["191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":8,"nodeType":"199","messageId":"200","endLine":14,"endColumn":15},{"ruleId":"197","severity":1,"message":"201","line":17,"column":10,"nodeType":"199","messageId":"200","endLine":17,"endColumn":22},{"ruleId":"197","severity":1,"message":"202","line":20,"column":8,"nodeType":"199","messageId":"200","endLine":20,"endColumn":11},{"ruleId":"203","severity":1,"message":"204","line":31,"column":2,"nodeType":"205","messageId":"206","endLine":33,"endColumn":3},{"ruleId":"197","severity":1,"message":"207","line":1,"column":10,"nodeType":"199","messageId":"200","endLine":1,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":12,"column":17,"nodeType":"210","endLine":12,"endColumn":69},{"ruleId":"208","severity":1,"message":"209","line":9,"column":35,"nodeType":"210","endLine":9,"endColumn":72},{"ruleId":"197","severity":1,"message":"211","line":2,"column":17,"nodeType":"199","messageId":"200","endLine":2,"endColumn":25},{"ruleId":"197","severity":1,"message":"212","line":2,"column":27,"nodeType":"199","messageId":"200","endLine":2,"endColumn":36},{"ruleId":"197","severity":1,"message":"213","line":2,"column":38,"nodeType":"199","messageId":"200","endLine":2,"endColumn":48},{"ruleId":"197","severity":1,"message":"214","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":13},{"ruleId":"197","severity":1,"message":"201","line":6,"column":41,"nodeType":"199","messageId":"200","endLine":6,"endColumn":53},{"ruleId":"197","severity":1,"message":"215","line":10,"column":8,"nodeType":"199","messageId":"200","endLine":10,"endColumn":17},{"ruleId":"197","severity":1,"message":"216","line":20,"column":15,"nodeType":"199","messageId":"200","endLine":20,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":59,"column":55,"nodeType":"210","endLine":59,"endColumn":87},{"ruleId":"217","severity":1,"message":"218","line":78,"column":72,"nodeType":"219","messageId":"220","endLine":78,"endColumn":74},{"ruleId":"197","severity":1,"message":"221","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":14},{"ruleId":"197","severity":1,"message":"222","line":3,"column":16,"nodeType":"199","messageId":"200","endLine":3,"endColumn":24},{"ruleId":"217","severity":1,"message":"223","line":82,"column":97,"nodeType":"219","messageId":"220","endLine":82,"endColumn":99},{"ruleId":"197","severity":1,"message":"224","line":6,"column":20,"nodeType":"199","messageId":"200","endLine":6,"endColumn":33},{"ruleId":"217","severity":1,"message":"223","line":27,"column":30,"nodeType":"219","messageId":"220","endLine":27,"endColumn":32},{"ruleId":"217","severity":1,"message":"223","line":86,"column":79,"nodeType":"219","messageId":"220","endLine":86,"endColumn":81},{"ruleId":"217","severity":1,"message":"223","line":103,"column":63,"nodeType":"219","messageId":"220","endLine":103,"endColumn":65},{"ruleId":"197","severity":1,"message":"225","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":5,"column":5,"nodeType":"205","messageId":"206","endLine":7,"endColumn":6},{"ruleId":"197","severity":1,"message":"222","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":8,"column":2,"nodeType":"205","messageId":"206","endLine":10,"endColumn":3},{"ruleId":"217","severity":1,"message":"218","line":113,"column":14,"nodeType":"219","messageId":"220","endLine":113,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":113,"column":75,"nodeType":"219","messageId":"220","endLine":113,"endColumn":77},{"ruleId":"217","severity":1,"message":"218","line":117,"column":14,"nodeType":"219","messageId":"220","endLine":117,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":118,"column":85,"nodeType":"219","messageId":"220","endLine":118,"endColumn":87},{"ruleId":"217","severity":1,"message":"218","line":121,"column":14,"nodeType":"219","messageId":"220","endLine":121,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":126,"column":44,"nodeType":"219","messageId":"220","endLine":126,"endColumn":46},{"ruleId":"217","severity":1,"message":"223","line":138,"column":30,"nodeType":"219","messageId":"220","endLine":138,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":159,"column":12,"nodeType":"210","endLine":159,"endColumn":80},{"ruleId":"217","severity":1,"message":"218","line":211,"column":33,"nodeType":"219","messageId":"220","endLine":211,"endColumn":35},{"ruleId":"197","severity":1,"message":"226","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":9},{"ruleId":"197","severity":1,"message":"227","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":19,"column":2,"nodeType":"205","messageId":"206","endLine":21,"endColumn":3},{"ruleId":"217","severity":1,"message":"218","line":85,"column":14,"nodeType":"219","messageId":"220","endLine":85,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":85,"column":75,"nodeType":"219","messageId":"220","endLine":85,"endColumn":77},{"ruleId":"217","severity":1,"message":"218","line":89,"column":14,"nodeType":"219","messageId":"220","endLine":89,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":90,"column":85,"nodeType":"219","messageId":"220","endLine":90,"endColumn":87},{"ruleId":"217","severity":1,"message":"218","line":93,"column":14,"nodeType":"219","messageId":"220","endLine":93,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":98,"column":44,"nodeType":"219","messageId":"220","endLine":98,"endColumn":46},{"ruleId":"217","severity":1,"message":"223","line":110,"column":30,"nodeType":"219","messageId":"220","endLine":110,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":130,"column":12,"nodeType":"210","endLine":130,"endColumn":80},{"ruleId":"217","severity":1,"message":"218","line":187,"column":42,"nodeType":"219","messageId":"220","endLine":187,"endColumn":44},{"ruleId":"197","severity":1,"message":"228","line":2,"column":22,"nodeType":"199","messageId":"200","endLine":2,"endColumn":27},{"ruleId":"197","severity":1,"message":"229","line":3,"column":31,"nodeType":"199","messageId":"200","endLine":3,"endColumn":44},{"ruleId":"197","severity":1,"message":"230","line":6,"column":8,"nodeType":"199","messageId":"200","endLine":6,"endColumn":13},{"ruleId":"197","severity":1,"message":"231","line":11,"column":8,"nodeType":"199","messageId":"200","endLine":11,"endColumn":13},{"ruleId":"217","severity":1,"message":"223","line":56,"column":29,"nodeType":"219","messageId":"220","endLine":56,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":61,"column":50,"nodeType":"219","messageId":"220","endLine":61,"endColumn":52},{"ruleId":"217","severity":1,"message":"218","line":62,"column":56,"nodeType":"219","messageId":"220","endLine":62,"endColumn":58},{"ruleId":"217","severity":1,"message":"218","line":97,"column":29,"nodeType":"219","messageId":"220","endLine":97,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":101,"column":37,"nodeType":"219","messageId":"220","endLine":101,"endColumn":39},{"ruleId":"217","severity":1,"message":"218","line":119,"column":47,"nodeType":"219","messageId":"220","endLine":119,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":127,"column":29,"nodeType":"219","messageId":"220","endLine":127,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":153,"column":29,"nodeType":"219","messageId":"220","endLine":153,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":237,"column":69,"nodeType":"219","messageId":"220","endLine":237,"endColumn":71},{"ruleId":"217","severity":1,"message":"218","line":287,"column":63,"nodeType":"219","messageId":"220","endLine":287,"endColumn":65},{"ruleId":"217","severity":1,"message":"218","line":297,"column":63,"nodeType":"219","messageId":"220","endLine":297,"endColumn":65},{"ruleId":"197","severity":1,"message":"222","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":18},{"ruleId":"197","severity":1,"message":"232","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":22},{"ruleId":"197","severity":1,"message":"201","line":3,"column":41,"nodeType":"199","messageId":"200","endLine":3,"endColumn":53},{"ruleId":"197","severity":1,"message":"233","line":4,"column":15,"nodeType":"199","messageId":"200","endLine":4,"endColumn":18},{"ruleId":"197","severity":1,"message":"234","line":2,"column":20,"nodeType":"199","messageId":"200","endLine":2,"endColumn":29},{"ruleId":"203","severity":1,"message":"204","line":7,"column":5,"nodeType":"205","messageId":"206","endLine":9,"endColumn":6},{"ruleId":"197","severity":1,"message":"234","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":19},{"ruleId":"197","severity":1,"message":"235","line":6,"column":21,"nodeType":"199","messageId":"200","endLine":6,"endColumn":24},{"ruleId":"197","severity":1,"message":"233","line":6,"column":26,"nodeType":"199","messageId":"200","endLine":6,"endColumn":29},{"ruleId":"197","severity":1,"message":"221","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":14},{"ruleId":"197","severity":1,"message":"226","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":9},{"ruleId":"197","severity":1,"message":"202","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":11},{"ruleId":"197","severity":1,"message":"236","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":13},{"ruleId":"197","severity":1,"message":"234","line":6,"column":10,"nodeType":"199","messageId":"200","endLine":6,"endColumn":19},{"ruleId":"197","severity":1,"message":"235","line":6,"column":21,"nodeType":"199","messageId":"200","endLine":6,"endColumn":24},{"ruleId":"197","severity":1,"message":"233","line":6,"column":26,"nodeType":"199","messageId":"200","endLine":6,"endColumn":29},{"ruleId":"197","severity":1,"message":"221","line":7,"column":10,"nodeType":"199","messageId":"200","endLine":7,"endColumn":14},{"ruleId":"197","severity":1,"message":"226","line":8,"column":8,"nodeType":"199","messageId":"200","endLine":8,"endColumn":9},{"ruleId":"197","severity":1,"message":"237","line":12,"column":11,"nodeType":"199","messageId":"200","endLine":12,"endColumn":22},{"ruleId":"197","severity":1,"message":"235","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":7,"column":56,"nodeType":"219","messageId":"220","endLine":7,"endColumn":58},{"ruleId":"217","severity":1,"message":"218","line":10,"column":22,"nodeType":"219","messageId":"220","endLine":10,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":15,"column":68,"nodeType":"219","messageId":"220","endLine":15,"endColumn":70},{"ruleId":"217","severity":1,"message":"218","line":18,"column":71,"nodeType":"219","messageId":"220","endLine":18,"endColumn":73},{"ruleId":"217","severity":1,"message":"218","line":21,"column":68,"nodeType":"219","messageId":"220","endLine":21,"endColumn":70},{"ruleId":"217","severity":1,"message":"218","line":24,"column":69,"nodeType":"219","messageId":"220","endLine":24,"endColumn":71},{"ruleId":"193","replacedBy":"238"},{"ruleId":"195","replacedBy":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Stories' is defined but never used.","Identifier","unusedVar","'AuthProvider' is defined but never used.","'Can' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Axios' is defined but never used.","'StoryCard' is defined but never used.","'timeOfDay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.","'SkeletonTheme' is defined but never used.","'React' is defined but never used.","'_' is defined but never used.","'Toast' is defined but never used.","'Quill' is defined but never used.","'ThemeProvider' is defined but never used.","'Input' is defined but never used.","'Chips' is defined but never used.","'AuthConsumer' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'axios' is defined but never used.","'authContext' is assigned a value but never used.",["240"],["241"],"no-global-assign","no-unsafe-negation"]